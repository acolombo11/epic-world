plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    def file = rootProject.file("local.properties")

    compileSdk 34
    namespace "com.ruben.epicworld"

    defaultConfig {
        applicationId "com.ruben.epicworld"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField 'String', 'BASE_URL', "\"https://api.rawg.io/\""
        if (file.exists()) {
            def localProperties = new Properties()
            localProperties.load(new FileInputStream(file))
            buildConfigField 'String', 'API_KEY', "\"" + localProperties['api.key'] + "\""
        } else {
            buildConfigField 'String', 'API_KEY', "\"" + System.getenv("API_KEY") + "\""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.11'
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '**/attach_hotspot_windows.dll'
            excludes += 'META-INF/licenses/**'
            excludes += 'META-INF/AL2.0'
        }
    }

    dependencies {
        def core_version = "1.8.0"
        implementation "androidx.core:core-ktx:$core_version"

        def appcompat_version = "1.6.1"
        implementation "androidx.appcompat:appcompat:$appcompat_version"

        def material_design_version = "1.11.0"
        implementation "com.google.android.material:material:$material_design_version"

        def jetpack_compose_version = "1.6.5"
        implementation "androidx.compose.ui:ui:$jetpack_compose_version"
        implementation "androidx.compose.material:material:$jetpack_compose_version"
        implementation "androidx.compose.ui:ui-tooling-preview:$jetpack_compose_version"
        debugImplementation "androidx.compose.ui:ui-tooling:$jetpack_compose_version"
        debugImplementation "androidx.compose.ui:ui-test-manifest:$jetpack_compose_version"

        def jetpack_lifecycle_version = "2.7.0"
        implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$jetpack_lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:$jetpack_lifecycle_version"

        def jetpack_navigation_version = "2.7.7"
        implementation "androidx.navigation:navigation-compose:$jetpack_navigation_version"

        def activity_compose_version = "1.8.2"
        implementation "androidx.activity:activity-compose:$activity_compose_version"

        def jetpack_constraint_layout_version = "1.0.1"
        implementation "androidx.constraintlayout:constraintlayout-compose:$jetpack_constraint_layout_version"

        def jetpack_paging_version = "1.0.0-alpha15"
        implementation "androidx.paging:paging-compose:$jetpack_paging_version"

        def material_icons_version = "1.1.1"
        implementation "androidx.compose.material:material-icons-extended:$material_icons_version"

        def coil_version = "1.4.0"
        implementation "io.coil-kt:coil-compose:$coil_version"

        def exo_player_version = "2.19.1"
        implementation "com.google.android.exoplayer:exoplayer:$exo_player_version"

        def coroutines_version = "1.8.0"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

        def retrofit_version = "2.9.0"
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

        def logging_interceptor_version = "4.12.0"
        implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

        def dagger_hilt_version = "2.51.1"
        implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

        def hilt_navigation_version = "1.2.0"
        implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_version"

        def mvi_orbit_version = "4.3.2"
        implementation "org.orbit-mvi:orbit-core:$mvi_orbit_version"
        implementation "org.orbit-mvi:orbit-viewmodel:$mvi_orbit_version"

        def splash_api_version = "1.0.1"
        implementation "androidx.core:core-splashscreen:$splash_api_version"

        def leakcanary_version = "2.8.1"
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

        //test dependencies
        def junit_version = "4.13.2"
        testImplementation "junit:junit:$junit_version"

        def junit_android_version = "1.1.3"
        androidTestImplementation "androidx.test.ext:junit:$junit_android_version"

        def espresso_version = "3.5.1"
        androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

        def mockwebserver_version = "4.10.0"
        testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

        def mockk_version = "1.13.2"
        testImplementation "io.mockk:mockk:$mockk_version"
        androidTestImplementation "io.mockk:mockk-android:$mockk_version"

        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

        testImplementation "org.orbit-mvi:orbit-test:$mvi_orbit_version"

        androidTestImplementation "androidx.compose.ui:ui-test-junit4:$jetpack_compose_version"
        debugImplementation "androidx.compose.ui:ui-test-manifest:$jetpack_compose_version"

        def turbine_version = "0.7.0"
        testImplementation "app.cash.turbine:turbine:$turbine_version"
    }
}
